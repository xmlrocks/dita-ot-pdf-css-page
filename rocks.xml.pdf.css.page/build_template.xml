<?xml version="1.0" encoding="utf-8"?>
<project name="rocks.xml.pdf.css.page" xmlns:dita="http://dita-ot.sourceforge.net">

    <property name="html.pdf.formatter" value="pdfreactor"/>

    <property name="css.file"
              value="${dita.plugin.rocks.xml.pdf.css.page.dir}${file.separator}css${file.separator}main.css"/>

    <property name="index" value="true"/>

    <property name="toc" value="true"/>


    <import file="dita-merge.xml"/>

    <condition property="rocks.xml.pdf.css.page">
        <equals arg1="${transtype}" arg2="pdf-css-page" casesensitive="false"/>
    </condition>

    <condition property="antennahouse">
        <equals arg1="${html.pdf.formatter}" arg2="antennahouse" casesensitive="false"/>
    </condition>

    <condition property="prince">
        <equals arg1="${html.pdf.formatter}" arg2="prince" casesensitive="false"/>
    </condition>

    <condition property="pdfreactor">
        <equals arg1="${html.pdf.formatter}" arg2="pdfreactor" casesensitive="false"/>
    </condition>

    <condition property="vivliostyle">
        <equals arg1="${html.pdf.formatter}" arg2="vivliostyle" casesensitive="false"/>
    </condition>


    <target name="dita2pdf-css-page" depends="dita2pdf-css-page.init,
                                              map2pdf-css-page.merged,
                                              topic2pdf-css-page.init, map2pdf-css-page.init,
                                              pdf-css-page.dita2html,
                                              prepare.common.css, prepare.common.javascript,
                                              run.antennahouse, run.prince, run.pdfreactor, run.vivliostyle"/>

    <target name="dita2pdf-css-page.init" depends="check.formatter, check.formatter.path,
                                                   check.antennahouse, check.prince, check.pdfreactor, check.vivliostyle,
                                                   check.css.file"/>

    <target name="check.formatter">
        <fail message="Unsupported &quot;html.pdf.formatter&quot; is set. Valid options are: pdfreactor, vivliostyle, antennahouse, prince.">
            <condition>
                <not>
                    <or>
                        <equals arg1="${html.pdf.formatter}" arg2="antennahouse" casesensitive="false"/>
                        <equals arg1="${html.pdf.formatter}" arg2="prince" casesensitive="false"/>
                        <equals arg1="${html.pdf.formatter}" arg2="pdfreactor" casesensitive="false"/>
                        <equals arg1="${html.pdf.formatter}" arg2="vivliostyle" casesensitive="false"/>
                    </or>
                </not>
            </condition>
        </fail>
    </target>

    <target name="check.formatter.path">
        <fail message="Property &quot;html.pdf.formatter.path&quot; is not set. Please, set path to the PDF Formatter.">
            <condition>
                <not>
                    <isset property="html.pdf.formatter.path"/>
                </not>
            </condition>
        </fail>
    </target>

    <target name="check.antennahouse" if="${use.antennahouse}">
        <condition property="formatter.available">
            <available file="${html.pdf.formatter.path}"/>
        </condition>

        <fail unless="formatter.available">
            Cannot find Antennahouse Formatter: "${html.pdf.formatter.path}". It can be purchased at: https://www.antennahouse.com/
        </fail>
    </target>

    <target name="check.prince" if="${use.prince}">
        <condition property="formatter.available">
            <available file="${html.pdf.formatter.path}"/>
        </condition>

        <fail unless="formatter.available">
            Cannot find Prince Formatter: "${html.pdf.formatter.path}". It can be purchased at: http://www.princexml.com/
        </fail>
    </target>

    <target name="check.pdfreactor" if="${use.pdfreactor}">
        <condition property="formatter.available">
            <available file="${html.pdf.formatter.path}"/>
        </condition>

        <fail unless="formatter.available">
            Cannot find PDFreactor: "${html.pdf.formatter.path}". It can be purchased at: http://www.pdfreactor.com/
        </fail>
    </target>

    <target name="check.vivliostyle" if="${use.vivliostyle}">
        <condition property="formatter.available">
            <available file="${html.pdf.formatter.path}"/>
        </condition>

        <fail unless="formatter.available">
            Cannot find Vivliostyle Formatter: "${html.pdf.formatter.path}". It can be purchased at: http://vivliostyle.com/
        </fail>
    </target>

    <target name="check.css.file">
        <condition property="input.css.file.available">
            <available file="${css.file}"/>
        </condition>

        <fail unless="input.css.file.available">
            Cannot find the CSS file: ${css.file}. Please check the file path.
        </fail>
    </target>

    <target name="pdf-css-page.image.dir.init" if="rocks.xml.pdf.css.page">
        <property name="preprocess.copy-html.skip" value="yes"/>
        <condition property="copy-image.todir" value="${dita.temp.dir}/${uplevels}" else="${output.dir}">
            <equals arg1="${generate.copy.outer}" arg2="1"/>
        </condition>
        <copy todir="${dita.temp.dir}/${uplevels}">
            <fileset dir="${user.input.dir}">
                <include name="**/*.svg"/>
                <include name="**/*.SVG"/>
                <include name="**/*.jpg"/>
                <include name="**/*.JPG"/>
                <include name="**/*.jpeg"/>
                <include name="**/*.JPEG"/>
                <include name="**/*.png"/>
                <include name="**/*.PNG"/>
                <include name="**/*.gif"/>
                <include name="**/*.GIF"/>
                <include name="**/*.pdf"/>
                <include name="**/*.tif"/>
                <include name="**/*.TIF"/>
                <include name="**/*.tiff"/>
                <include name="**/*.TIFF"/>
                <include name="**/*.bmp"/>
                <include name="**/*.BMP"/>
                <include name="**/*.ico"/>
                <include name="**/*.ICO"/>
            </fileset>
        </copy>
    </target>

    <target name="topic2pdf-css-page.init" if="noMap">
        <basename property="dita.topic.file.name" file="${args.input}"/>

        <property name="dita.file" value="${dita.temp.dir}${file.separator}${dita.topic.file.name}"/>

        <property name="xhtml.file" value="${dita.temp.dir}${file.separator}${dita.topic.filename.root}.xhtml"/>

        <property name="output.file" value="${output.dir}${file.separator}${dita.topic.filename.root}.pdf"/>
    </target>

    <target name="map2pdf-css-page.init" unless="noMap">
        <property name="dita.file" value="${dita.temp.dir}${file.separator}stage1.xml"/>

        <property name="xhtml.file" value="${dita.temp.dir}${file.separator}${dita.map.filename.root}.xhtml"/>

        <property name="output.file" value="${output.dir}${file.separator}${dita.map.filename.root}.pdf"/>
    </target>

    <target name="pdf-css-page.dita2html">
        <property name="xsl.file"
                  value="${dita.plugin.rocks.xml.pdf.css.page.dir}${file.separator}xslt${file.separator}dita2pdf-css-page-import.xsl"/>

        <condition property="generate.index" value="true()" else="false()">
            <istrue value="${index}"/>
        </condition>

        <condition property="generate.toc" value="true()" else="false()">
            <istrue value="${toc}"/>
        </condition>

        <xslt in="${dita.file}" out="${xhtml.file}" style="${xsl.file}">
            <xmlcatalog refid="dita.catalog"/>
            <param name="CSS" expression="${args.css.file}" if="args.css.file"/>
            <param name="CSSPATH" expression="${user.csspath}" if="user.csspath"/>
            <param name="generate-index" expression="${generate.index}" type="XPATH_BOOLEAN"/>
            <param name="generate-toc" expression="${generate.toc}" type="XPATH_BOOLEAN"/>
            <dita:extension id="xsl.pdf-css-page.xslt.param" behavior="org.dita.dost.platform.InsertAction"/>
        </xslt>
    </target>

    <target name="prepare.common.css">
        <property name="commonltr.css.file"
                  value="${dita.plugin.rocks.xml.pdf.css.page.dir}${file.separator}css${file.separator}commonltr.css"/>
        <copy file="${commonltr.css.file}" todir="${dita.temp.dir}"/>
        <property name="prince.css.file"
                  value="${dita.plugin.rocks.xml.pdf.css.page.dir}${file.separator}css${file.separator}prince-index.css"/>
        <copy file="${prince.css.file}" todir="${dita.temp.dir}"/>
    </target>

    <target name="prepare.common.javascript">
        <property name="common.javascript.file"
                  value="${dita.plugin.rocks.xml.pdf.css.page.dir}${file.separator}js${file.separator}index-unifier.js"/>
        <copy file="${common.javascript.file}" todir="${dita.temp.dir}"/>

        <property name="prince.javascript.file-1"
                  value="${dita.plugin.rocks.xml.pdf.css.page.dir}${file.separator}js${file.separator}prince-index-1.js"/>
        <copy file="${prince.javascript.file-1}" todir="${dita.temp.dir}"/>

        <property name="prince.javascript.file-2"
                  value="${dita.plugin.rocks.xml.pdf.css.page.dir}${file.separator}js${file.separator}prince-index-2.js"/>
        <copy file="${prince.javascript.file-2}" todir="${dita.temp.dir}"/>
    </target>

    <target name="run.antennahouse" if="antennahouse">
        <echo message="[WARN]: You are using Antennahouse. Please notice that Index may not work properly."/>

        <exec executable="${html.pdf.formatter.path}">
            <arg line="-d ${xhtml.file}"/>
            <arg line="-o ${output.file}"/>
            <arg line="-s ${css.file}"/>
            <dita:extension id="xsl.pdf-css-page.antennahouse.param" behavior="org.dita.dost.platform.InsertAction"/>
        </exec>
    </target>

    <target name="run.prince" if="prince">
        <property name="index.pages" value="${dita.temp.dir}${file.separator}index.pages.js"/>

        <exec executable="${html.pdf.formatter.path}" output="${index.pages}">
            <arg line="-s ${prince.css.file}"/>
            <arg line="-s ${css.file}"/>
            <arg line="--javascript"/>
            <arg line="--script ${prince.javascript.file-1}"/>
            <arg line="${xhtml.file}"/>
            <arg line="-o ${output.file}"/>
            <dita:extension id="xsl.pdf-css-page.prince.param" behavior="org.dita.dost.platform.InsertAction"/>
        </exec>

        <exec executable="${html.pdf.formatter.path}">
            <arg line="-s ${css.file}"/>
            <arg line="--javascript"/>
            <arg line="--script ${prince.javascript.file-2}"/>
            <arg line="--script ${index.pages}"/>
            <arg line="${xhtml.file}"/>
            <arg line="-o ${output.file}"/>
            <dita:extension id="xsl.pdf-css-page.prince.param" behavior="org.dita.dost.platform.InsertAction"/>
        </exec>
    </target>

    <target name="run.pdfreactor" if="pdfreactor">
        <java jar="${html.pdf.formatter.path}" fork="yes">
            <arg line="-s ${css.file}"/>
            <arg line="-a"/>
            <arg line="-j ${common.javascript.file} false"/>
            <arg line="${xhtml.file}"/>
            <arg line="${output.file}"/>
            <dita:extension id="xsl.pdf-css-page.pdfreactor.param" behavior="org.dita.dost.platform.InsertAction"/>
        </java>
    </target>

    <target name="run.vivliostyle" if="vivliostyle">
        <echo message="[WARN]: You are using Vivliostyle. Please notice that TOC and Index may not work properly."/>

        <exec executable="${html.pdf.formatter.path}">
            <arg line="${xhtml.file}"/>
            <arg line="--output=${output.file}"/>
            <arg line="--style=${css.file}"/>
            <dita:extension id="xsl.pdf-css-page.vivlio.param" behavior="org.dita.dost.platform.InsertAction"/>
        </exec>
    </target>

</project>